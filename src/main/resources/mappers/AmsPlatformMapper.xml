<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbs.ams.web.mappers.AmsPlatformMapper">
  <resultMap id="BaseResultMap" type="com.pbs.ams.web.model.AmsPlatform">
    <id column="platform_id" jdbcType="INTEGER" property="platformId" />
    <result column="platform_logo" jdbcType="VARCHAR" property="platformLogo" />
    <result column="platform_name" jdbcType="VARCHAR" property="platformName" />
    <result column="platform_abbr_name" jdbcType="VARCHAR" property="platformAbbrName" />
    <result column="platform_type" jdbcType="INTEGER" property="platformType" />
    <result column="creditable" jdbcType="BIT" property="creditable" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="operator_id" jdbcType="INTEGER" property="operatorId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    platform_id, platform_logo, platform_name, platform_abbr_name, platform_type, creditable, 
    create_time, update_time, operator_id
  </sql>
  <select id="selectByExample" parameterType="com.pbs.ams.web.model.AmsPlatformExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ams_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_platform
    where platform_id = #{platformId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ams_platform
    where platform_id = #{platformId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pbs.ams.web.model.AmsPlatformExample">
    delete from ams_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pbs.ams.web.model.AmsPlatform">
    insert into ams_platform (platform_id, platform_logo, platform_name, 
      platform_abbr_name, platform_type, creditable, 
      create_time, update_time, operator_id
      )
    values (#{platformId,jdbcType=INTEGER}, #{platformLogo,jdbcType=VARCHAR}, #{platformName,jdbcType=VARCHAR}, 
      #{platformAbbrName,jdbcType=VARCHAR}, #{platformType,jdbcType=INTEGER}, #{creditable,jdbcType=BIT}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{operatorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pbs.ams.web.model.AmsPlatform">
    insert into ams_platform
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="platformId != null">
        platform_id,
      </if>
      <if test="platformLogo != null">
        platform_logo,
      </if>
      <if test="platformName != null">
        platform_name,
      </if>
      <if test="platformAbbrName != null">
        platform_abbr_name,
      </if>
      <if test="platformType != null">
        platform_type,
      </if>
      <if test="creditable != null">
        creditable,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="platformId != null">
        #{platformId,jdbcType=INTEGER},
      </if>
      <if test="platformLogo != null">
        #{platformLogo,jdbcType=VARCHAR},
      </if>
      <if test="platformName != null">
        #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="platformAbbrName != null">
        #{platformAbbrName,jdbcType=VARCHAR},
      </if>
      <if test="platformType != null">
        #{platformType,jdbcType=INTEGER},
      </if>
      <if test="creditable != null">
        #{creditable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pbs.ams.web.model.AmsPlatformExample" resultType="java.lang.Long">
    select count(*) from ams_platform
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ams_platform
    <set>
      <if test="record.platformId != null">
        platform_id = #{record.platformId,jdbcType=INTEGER},
      </if>
      <if test="record.platformLogo != null">
        platform_logo = #{record.platformLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.platformName != null">
        platform_name = #{record.platformName,jdbcType=VARCHAR},
      </if>
      <if test="record.platformAbbrName != null">
        platform_abbr_name = #{record.platformAbbrName,jdbcType=VARCHAR},
      </if>
      <if test="record.platformType != null">
        platform_type = #{record.platformType,jdbcType=INTEGER},
      </if>
      <if test="record.creditable != null">
        creditable = #{record.creditable,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.operatorId != null">
        operator_id = #{record.operatorId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ams_platform
    set platform_id = #{record.platformId,jdbcType=INTEGER},
      platform_logo = #{record.platformLogo,jdbcType=VARCHAR},
      platform_name = #{record.platformName,jdbcType=VARCHAR},
      platform_abbr_name = #{record.platformAbbrName,jdbcType=VARCHAR},
      platform_type = #{record.platformType,jdbcType=INTEGER},
      creditable = #{record.creditable,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      operator_id = #{record.operatorId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pbs.ams.web.model.AmsPlatform">
    update ams_platform
    <set>
      <if test="platformLogo != null">
        platform_logo = #{platformLogo,jdbcType=VARCHAR},
      </if>
      <if test="platformName != null">
        platform_name = #{platformName,jdbcType=VARCHAR},
      </if>
      <if test="platformAbbrName != null">
        platform_abbr_name = #{platformAbbrName,jdbcType=VARCHAR},
      </if>
      <if test="platformType != null">
        platform_type = #{platformType,jdbcType=INTEGER},
      </if>
      <if test="creditable != null">
        creditable = #{creditable,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
    </set>
    where platform_id = #{platformId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pbs.ams.web.model.AmsPlatform">
    update ams_platform
    set platform_logo = #{platformLogo,jdbcType=VARCHAR},
      platform_name = #{platformName,jdbcType=VARCHAR},
      platform_abbr_name = #{platformAbbrName,jdbcType=VARCHAR},
      platform_type = #{platformType,jdbcType=INTEGER},
      creditable = #{creditable,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      operator_id = #{operatorId,jdbcType=INTEGER}
    where platform_id = #{platformId,jdbcType=INTEGER}
  </update>
  <insert id="insertIntoSnaps">
    insert into ams_platform_snaps SELECT CAST(DATE_FORMAT(CURRENT_TIMESTAMP(3),'%Y%m%d%H%i%S%f')/1000 AS UNSIGNED),tb.* from ams_platform as tb where platform_id= #{platform_id}
  </insert>

  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>