<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbs.ams.web.mappers.AmsTradeOrderMapper">
  <resultMap id="BaseResultMap" type="com.pbs.ams.web.model.AmsTradeOrder">
    <id column="trade_order_id" jdbcType="BIGINT" property="tradeOrderId" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="trade_order_status" jdbcType="TINYINT" property="tradeOrderStatus" />
    <result column="trade_order_date" jdbcType="BIGINT" property="tradeOrderDate" />
    <result column="knock_avg_price" jdbcType="DECIMAL" property="knockAvgPrice" />
    <result column="cancel_amount" jdbcType="INTEGER" property="cancelAmount" />
    <result column="trade_order_type" jdbcType="TINYINT" property="tradeOrderType" />
    <result column="ip_source" jdbcType="VARCHAR" property="ipSource" />
    <result column="mac_address" jdbcType="VARCHAR" property="macAddress" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
  </resultMap>
  <sql id="Base_Column_List">
    trade_order_id, contract_id, trade_order_status, trade_order_date, knock_avg_price, 
    cancel_amount, trade_order_type, ip_source, mac_address, create_time, update_time, 
    operator_id
  </sql>
  <!--查询委托列表-->
  <!--<select id="selectAmsEntrustWithDetail" resultType="java.util.Map" parameterType="java.lang.Object">-->
  <!--SELECT trade_order_id, contract_id, trade_order_status, trade_order_date, knock_avg_price,-->
    <!--cancel_amount, trade_order_type, ip_source, mac_address, create_time, update_time,-->
    <!--operator_id at.trade_account_id, at.company_id, at.trade_account_type, at.trade_account,-->
  <!--at.trade_account_name,at.trade_account_password, at.broker_id, at.trade_account_status,at.create_time,-->
  <!--at.update_time,at.operator_id,at.is_login,ak.knock_id, ak.stock_id, ak.company_id, ak.contract_id,-->
  <!--ak.knock_price,ak.knock_volume,ak.entrust_id, ak.knock_date, ak.knock_amount, ak.buy_sell, ak.fee,-->
  <!--ak.operator_id-->
  <!--FROM ams_trade_order ae join ams_trade_account at-->
  <!--on at.company_id = ae.company_id join ams_knock ak on at.company_id = ak.company_id where 1 = 1-->
    <!--&lt;!&ndash;<if test="company_id != null">&ndash;&gt;-->
    <!--&lt;!&ndash;and ae.company_id = #{company_id,jdbcType=BIGINT}&ndash;&gt;-->
    <!--&lt;!&ndash;</if>&ndash;&gt;-->
    <!--<if test="limit != null">-->
      <!--<if test="offset != null"> limit ${offset}, ${limit} </if>-->
      <!--<if test="offset == null"> limit ${limit} </if>-->
    <!--</if>-->
  <!--</select>-->

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_trade_order
    where trade_order_id = #{tradeOrderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ams_trade_order
    where trade_order_id = #{tradeOrderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pbs.ams.web.model.AmsTradeOrder">
    insert into ams_trade_order (trade_order_id, contract_id, trade_order_status, 
      trade_order_date, knock_avg_price, cancel_amount, 
      trade_order_type, ip_source, mac_address, 
      create_time, update_time, operator_id
      )
    values (#{tradeOrderId,jdbcType=BIGINT}, #{contractId,jdbcType=VARCHAR}, #{tradeOrderStatus,jdbcType=TINYINT}, 
      #{tradeOrderDate,jdbcType=BIGINT}, #{knockAvgPrice,jdbcType=DECIMAL}, #{cancelAmount,jdbcType=INTEGER}, 
      #{tradeOrderType,jdbcType=TINYINT}, #{ipSource,jdbcType=VARCHAR}, #{macAddress,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{operatorId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pbs.ams.web.model.AmsTradeOrder">
    insert into ams_trade_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeOrderId != null">
        trade_order_id,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="tradeOrderStatus != null">
        trade_order_status,
      </if>
      <if test="tradeOrderDate != null">
        trade_order_date,
      </if>
      <if test="knockAvgPrice != null">
        knock_avg_price,
      </if>
      <if test="cancelAmount != null">
        cancel_amount,
      </if>
      <if test="tradeOrderType != null">
        trade_order_type,
      </if>
      <if test="ipSource != null">
        ip_source,
      </if>
      <if test="macAddress != null">
        mac_address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeOrderId != null">
        #{tradeOrderId,jdbcType=BIGINT},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="tradeOrderStatus != null">
        #{tradeOrderStatus,jdbcType=TINYINT},
      </if>
      <if test="tradeOrderDate != null">
        #{tradeOrderDate,jdbcType=BIGINT},
      </if>
      <if test="knockAvgPrice != null">
        #{knockAvgPrice,jdbcType=DECIMAL},
      </if>
      <if test="cancelAmount != null">
        #{cancelAmount,jdbcType=INTEGER},
      </if>
      <if test="tradeOrderType != null">
        #{tradeOrderType,jdbcType=TINYINT},
      </if>
      <if test="ipSource != null">
        #{ipSource,jdbcType=VARCHAR},
      </if>
      <if test="macAddress != null">
        #{macAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pbs.ams.web.model.AmsTradeOrder">
    update ams_trade_order
    <set>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="tradeOrderStatus != null">
        trade_order_status = #{tradeOrderStatus,jdbcType=TINYINT},
      </if>
      <if test="tradeOrderDate != null">
        trade_order_date = #{tradeOrderDate,jdbcType=BIGINT},
      </if>
      <if test="knockAvgPrice != null">
        knock_avg_price = #{knockAvgPrice,jdbcType=DECIMAL},
      </if>
      <if test="cancelAmount != null">
        cancel_amount = #{cancelAmount,jdbcType=INTEGER},
      </if>
      <if test="tradeOrderType != null">
        trade_order_type = #{tradeOrderType,jdbcType=TINYINT},
      </if>
      <if test="ipSource != null">
        ip_source = #{ipSource,jdbcType=VARCHAR},
      </if>
      <if test="macAddress != null">
        mac_address = #{macAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
    </set>
    where trade_order_id = #{tradeOrderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pbs.ams.web.model.AmsTradeOrder">
    update ams_trade_order
    set contract_id = #{contractId,jdbcType=VARCHAR},
      trade_order_status = #{tradeOrderStatus,jdbcType=TINYINT},
      trade_order_date = #{tradeOrderDate,jdbcType=BIGINT},
      knock_avg_price = #{knockAvgPrice,jdbcType=DECIMAL},
      cancel_amount = #{cancelAmount,jdbcType=INTEGER},
      trade_order_type = #{tradeOrderType,jdbcType=TINYINT},
      ip_source = #{ipSource,jdbcType=VARCHAR},
      mac_address = #{macAddress,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      operator_id = #{operatorId,jdbcType=BIGINT}
    where trade_order_id = #{tradeOrderId,jdbcType=BIGINT}
  </update>
  <insert id="insertIntoAmsTradeOrderSnaps">
    insert into ams_trade_order_snaps SELECT CAST(DATE_FORMAT(CURRENT_TIMESTAMP(3),'%Y%m%d%H%i%S%f')/1000 AS UNSIGNED),tb.* from ams_trade_order as tb where trade_order_id= #{trade_order_id}
  </insert>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>