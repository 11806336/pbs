<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbs.ams.web.mappers.AmsBrokerMapper">

    <resultMap id="BaseResultMap" type="com.pbs.ams.web.model.AmsBroker">
        <id column="broker_id" jdbcType="INTEGER" property="brokerId"/>
        <result column="broker_type" jdbcType="INTEGER" property="brokerType"/>
        <result column="platform_id" jdbcType="INTEGER" property="platformId"/>
        <result column="broker_abbr_name" jdbcType="VARCHAR" property="brokerAbbrName"/>
        <result column="broker_logo" jdbcType="VARCHAR" property="brokerLogo"/>
        <result column="broker_name" jdbcType="VARCHAR" property="brokerName"/>
        <result column="creditable" jdbcType="BIT" property="creditable"/>
        <result column="day_begin" jdbcType="BIGINT" property="dayBegin"/>
        <result column="day_end" jdbcType="BIGINT" property="dayEnd"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="operator_id" jdbcType="INTEGER" property="operatorId"/>
    </resultMap>

    <resultMap type="com.pbs.ams.web.model.AmsBroker" id="BaseResultMapExtend" extends="BaseResultMap">
        <association property="amsPlatform" javaType="com.pbs.ams.web.model.AmsPlatform">
            <id property="platformId" column="platform_id" />
            <result property="platformName" column="platform_name" />
        </association>
    </resultMap>
    <sql id="Base_Column_List">
    broker_id, broker_type, platform_id, broker_abbr_name, broker_logo, broker_name,
    creditable, day_begin, day_end, create_time, update_time, operator_id
  </sql>
    <select id="selectByExample" parameterType="hashMap" resultMap="BaseResultMapExtend">
        select
        b.broker_id,
        b.broker_type,
        b.platform_id,
        b.broker_abbr_name,
        b.broker_logo,
        b.broker_name,
        b.creditable,
        b.day_begin,
        b.day_end,
        b.create_time,
        b.update_time,
        b.operator_id,
        p.platform_id,
        p.platform_name
        from ams_broker b left join ams_platform p on b.platform_id=p.platform_id
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ams_broker
        where broker_id = #{brokerId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ams_broker
    where broker_id = #{brokerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pbs.ams.web.model.AmsBrokerExample">
    delete from ams_broker

  </delete>
  <insert id="insert" parameterType="com.pbs.ams.web.model.AmsBroker">
    insert into ams_broker (broker_id, broker_type, platform_id,
      broker_abbr_name, broker_logo, broker_name,
      creditable, day_begin, day_end,
      create_time, update_time, operator_id
      )
    values (#{brokerId,jdbcType=BIGINT}, #{brokerType,jdbcType=INTEGER}, #{platformId,jdbcType=BIGINT},
      #{brokerAbbrName,jdbcType=VARCHAR}, #{brokerLogo,jdbcType=VARCHAR}, #{brokerName,jdbcType=VARCHAR},
      #{creditable,jdbcType=BIT}, #{dayBegin,jdbcType=BIGINT}, #{dayEnd,jdbcType=BIGINT},
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{operatorId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pbs.ams.web.model.AmsBroker">
    insert into ams_broker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brokerId != null">
        broker_id,
      </if>
      <if test="brokerType != null">
        broker_type,
      </if>
      <if test="platformId != null">
        platform_id,
      </if>
      <if test="brokerAbbrName != null">
        broker_abbr_name,
      </if>
      <if test="brokerLogo != null">
        broker_logo,
      </if>
      <if test="brokerName != null">
        broker_name,
      </if>
      <if test="creditable != null">
        creditable,
      </if>
      <if test="dayBegin != null">
        day_begin,
      </if>
      <if test="dayEnd != null">
        day_end,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brokerId != null">
        #{brokerId,jdbcType=BIGINT},
      </if>
      <if test="brokerType != null">
        #{brokerType,jdbcType=INTEGER},
      </if>
      <if test="platformId != null">
        #{platformId,jdbcType=BIGINT},
      </if>
      <if test="brokerAbbrName != null">
        #{brokerAbbrName,jdbcType=VARCHAR},
      </if>
      <if test="brokerLogo != null">
        #{brokerLogo,jdbcType=VARCHAR},
      </if>
      <if test="brokerName != null">
        #{brokerName,jdbcType=VARCHAR},
      </if>
      <if test="creditable != null">
        #{creditable,jdbcType=BIT},
      </if>
      <if test="dayBegin != null">
        #{dayBegin,jdbcType=BIGINT},
      </if>
      <if test="dayEnd != null">
        #{dayEnd,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pbs.ams.web.model.AmsBroker" resultType="java.lang.Long">
    select count(*) from ams_broker

  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ams_broker
    <set>
      <if test="record.brokerId != null">
        broker_id = #{record.brokerId,jdbcType=BIGINT},
      </if>
      <if test="record.brokerType != null">
        broker_type = #{record.brokerType,jdbcType=INTEGER},
      </if>
      <if test="record.platformId != null">
        platform_id = #{record.platformId,jdbcType=BIGINT},
      </if>
      <if test="record.brokerAbbrName != null">
        broker_abbr_name = #{record.brokerAbbrName,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerLogo != null">
        broker_logo = #{record.brokerLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.brokerName != null">
        broker_name = #{record.brokerName,jdbcType=VARCHAR},
      </if>
      <if test="record.creditable != null">
        creditable = #{record.creditable,jdbcType=BIT},
      </if>
      <if test="record.dayBegin != null">
        day_begin = #{record.dayBegin,jdbcType=BIGINT},
      </if>
      <if test="record.dayEnd != null">
        day_end = #{record.dayEnd,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.operatorId != null">
        operator_id = #{record.operatorId,jdbcType=BIGINT},
      </if>
    </set>

  </update>
  <update id="updateByExample" parameterType="map">
    update ams_broker
    set broker_id = #{record.brokerId,jdbcType=BIGINT},
      broker_type = #{record.brokerType,jdbcType=INTEGER},
      platform_id = #{record.platformId,jdbcType=BIGINT},
      broker_abbr_name = #{record.brokerAbbrName,jdbcType=VARCHAR},
      broker_logo = #{record.brokerLogo,jdbcType=VARCHAR},
      broker_name = #{record.brokerName,jdbcType=VARCHAR},
      creditable = #{record.creditable,jdbcType=BIT},
      day_begin = #{record.dayBegin,jdbcType=BIGINT},
      day_end = #{record.dayEnd,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      operator_id = #{record.operatorId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pbs.ams.web.model.AmsBroker">
    update ams_broker
    <set>
      <if test="brokerType != null">
        broker_type = #{brokerType,jdbcType=INTEGER},
      </if>
      <if test="platformId != null">
        platform_id = #{platformId,jdbcType=BIGINT},
      </if>
      <if test="brokerAbbrName != null">
        broker_abbr_name = #{brokerAbbrName,jdbcType=VARCHAR},
      </if>
      <if test="brokerLogo != null">
        broker_logo = #{brokerLogo,jdbcType=VARCHAR},
      </if>
      <if test="brokerName != null">
        broker_name = #{brokerName,jdbcType=VARCHAR},
      </if>
      <if test="creditable != null">
        creditable = #{creditable,jdbcType=BIT},
      </if>
      <if test="dayBegin != null">
        day_begin = #{dayBegin,jdbcType=BIGINT},
      </if>
      <if test="dayEnd != null">
        day_end = #{dayEnd,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
    </set>
    where broker_id = #{brokerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pbs.ams.web.model.AmsBroker">
    update ams_broker
    set broker_type = #{brokerType,jdbcType=INTEGER},
      platform_id = #{platformId,jdbcType=BIGINT},
      broker_abbr_name = #{brokerAbbrName,jdbcType=VARCHAR},
      broker_logo = #{brokerLogo,jdbcType=VARCHAR},
      broker_name = #{brokerName,jdbcType=VARCHAR},
      creditable = #{creditable,jdbcType=BIT},
      day_begin = #{dayBegin,jdbcType=BIGINT},
      day_end = #{dayEnd,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      operator_id = #{operatorId,jdbcType=BIGINT}
    where broker_id = #{brokerId,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>