<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbs.ams.web.mappers.AmsStockHoldingMapper">
  <resultMap id="BaseResultMap" type="com.pbs.ams.web.model.AmsStockHolding">
    <id column="stock_holding_id" jdbcType="BIGINT" property="stockHoldingId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="broker_id" jdbcType="BIGINT" property="brokerId" />
    <result column="stock_account_id" jdbcType="BIGINT" property="stockAccountId" />
    <result column="market_id" jdbcType="BIGINT" property="marketId" />
    <result column="stock_id" jdbcType="BIGINT" property="stockId" />
    <result column="market_code" jdbcType="VARCHAR" property="marketCode" />
    <result column="market_name" jdbcType="VARCHAR" property="marketName" />
    <result column="stock_code" jdbcType="VARCHAR" property="stockCode" />
    <result column="stock_name" jdbcType="VARCHAR" property="stockName" />
    <result column="current_stock_holding" jdbcType="INTEGER" property="currentStockHolding" />
    <result column="position_date" jdbcType="BIGINT" property="positionDate" />
    <result column="position_cost" jdbcType="DECIMAL" property="positionCost" />
    <result column="cost_value" jdbcType="DECIMAL" property="costValue" />
    <result column="single_cost_value" jdbcType="DECIMAL" property="singleCostValue" />
    <result column="profit_loss" jdbcType="VARCHAR" property="profitLoss" />
    <result column="market_value" jdbcType="DECIMAL" property="marketValue" />
    <result column="stockholder_account" jdbcType="VARCHAR" property="stockholderAccount" />
    <result column="frozen_amount" jdbcType="INTEGER" property="frozenAmount" />
    <result column="remaining" jdbcType="DECIMAL" property="remaining" />
    <result column="transit_shares" jdbcType="INTEGER" property="transitShares" />
    <result column="share_remaining" jdbcType="DECIMAL" property="shareRemaining" />
    <result column="latest_price" jdbcType="DECIMAL" property="latestPrice" />
    <result column="profit_rate" jdbcType="VARCHAR" property="profitRate" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stock_holding_id, company_id, broker_id, stock_account_id, market_id, stock_id, market_code, 
    market_name, stock_code, stock_name, current_stock_holding, position_date, position_cost, 
    cost_value, single_cost_value, profit_loss, market_value, stockholder_account, frozen_amount, 
    remaining, transit_shares, share_remaining, latest_price, profit_rate, create_time, 
    update_time, operator_id
  </sql>
  <select id="selectByExample" parameterType="com.pbs.ams.web.model.AmsStockHoldingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ams_stock_holding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_stock_holding
    where stock_holding_id = #{stockHoldingId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ams_stock_holding
    where stock_holding_id = #{stockHoldingId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pbs.ams.web.model.AmsStockHoldingExample">
    delete from ams_stock_holding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pbs.ams.web.model.AmsStockHolding">
    insert into ams_stock_holding (stock_holding_id, company_id, broker_id, 
      stock_account_id, market_id, stock_id, 
      market_code, market_name, stock_code, 
      stock_name, current_stock_holding, position_date, 
      position_cost, cost_value, single_cost_value, 
      profit_loss, market_value, stockholder_account, 
      frozen_amount, remaining, transit_shares, 
      share_remaining, latest_price, profit_rate, 
      create_time, update_time, operator_id
      )
    values (#{stockHoldingId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{brokerId,jdbcType=BIGINT}, 
      #{stockAccountId,jdbcType=BIGINT}, #{marketId,jdbcType=BIGINT}, #{stockId,jdbcType=BIGINT}, 
      #{marketCode,jdbcType=VARCHAR}, #{marketName,jdbcType=VARCHAR}, #{stockCode,jdbcType=VARCHAR}, 
      #{stockName,jdbcType=VARCHAR}, #{currentStockHolding,jdbcType=INTEGER}, #{positionDate,jdbcType=BIGINT}, 
      #{positionCost,jdbcType=DECIMAL}, #{costValue,jdbcType=DECIMAL}, #{singleCostValue,jdbcType=DECIMAL}, 
      #{profitLoss,jdbcType=VARCHAR}, #{marketValue,jdbcType=DECIMAL}, #{stockholderAccount,jdbcType=VARCHAR}, 
      #{frozenAmount,jdbcType=INTEGER}, #{remaining,jdbcType=DECIMAL}, #{transitShares,jdbcType=INTEGER}, 
      #{shareRemaining,jdbcType=DECIMAL}, #{latestPrice,jdbcType=DECIMAL}, #{profitRate,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{operatorId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pbs.ams.web.model.AmsStockHolding">
    insert into ams_stock_holding
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockHoldingId != null">
        stock_holding_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="brokerId != null">
        broker_id,
      </if>
      <if test="stockAccountId != null">
        stock_account_id,
      </if>
      <if test="marketId != null">
        market_id,
      </if>
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="marketCode != null">
        market_code,
      </if>
      <if test="marketName != null">
        market_name,
      </if>
      <if test="stockCode != null">
        stock_code,
      </if>
      <if test="stockName != null">
        stock_name,
      </if>
      <if test="currentStockHolding != null">
        current_stock_holding,
      </if>
      <if test="positionDate != null">
        position_date,
      </if>
      <if test="positionCost != null">
        position_cost,
      </if>
      <if test="costValue != null">
        cost_value,
      </if>
      <if test="singleCostValue != null">
        single_cost_value,
      </if>
      <if test="profitLoss != null">
        profit_loss,
      </if>
      <if test="marketValue != null">
        market_value,
      </if>
      <if test="stockholderAccount != null">
        stockholder_account,
      </if>
      <if test="frozenAmount != null">
        frozen_amount,
      </if>
      <if test="remaining != null">
        remaining,
      </if>
      <if test="transitShares != null">
        transit_shares,
      </if>
      <if test="shareRemaining != null">
        share_remaining,
      </if>
      <if test="latestPrice != null">
        latest_price,
      </if>
      <if test="profitRate != null">
        profit_rate,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockHoldingId != null">
        #{stockHoldingId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="brokerId != null">
        #{brokerId,jdbcType=BIGINT},
      </if>
      <if test="stockAccountId != null">
        #{stockAccountId,jdbcType=BIGINT},
      </if>
      <if test="marketId != null">
        #{marketId,jdbcType=BIGINT},
      </if>
      <if test="stockId != null">
        #{stockId,jdbcType=BIGINT},
      </if>
      <if test="marketCode != null">
        #{marketCode,jdbcType=VARCHAR},
      </if>
      <if test="marketName != null">
        #{marketName,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="currentStockHolding != null">
        #{currentStockHolding,jdbcType=INTEGER},
      </if>
      <if test="positionDate != null">
        #{positionDate,jdbcType=BIGINT},
      </if>
      <if test="positionCost != null">
        #{positionCost,jdbcType=DECIMAL},
      </if>
      <if test="costValue != null">
        #{costValue,jdbcType=DECIMAL},
      </if>
      <if test="singleCostValue != null">
        #{singleCostValue,jdbcType=DECIMAL},
      </if>
      <if test="profitLoss != null">
        #{profitLoss,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        #{marketValue,jdbcType=DECIMAL},
      </if>
      <if test="stockholderAccount != null">
        #{stockholderAccount,jdbcType=VARCHAR},
      </if>
      <if test="frozenAmount != null">
        #{frozenAmount,jdbcType=INTEGER},
      </if>
      <if test="remaining != null">
        #{remaining,jdbcType=DECIMAL},
      </if>
      <if test="transitShares != null">
        #{transitShares,jdbcType=INTEGER},
      </if>
      <if test="shareRemaining != null">
        #{shareRemaining,jdbcType=DECIMAL},
      </if>
      <if test="latestPrice != null">
        #{latestPrice,jdbcType=DECIMAL},
      </if>
      <if test="profitRate != null">
        #{profitRate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pbs.ams.web.model.AmsStockHoldingExample" resultType="java.lang.Long">
    select count(*) from ams_stock_holding
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ams_stock_holding
    <set>
      <if test="record.stockHoldingId != null">
        stock_holding_id = #{record.stockHoldingId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.brokerId != null">
        broker_id = #{record.brokerId,jdbcType=BIGINT},
      </if>
      <if test="record.stockAccountId != null">
        stock_account_id = #{record.stockAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.marketId != null">
        market_id = #{record.marketId,jdbcType=BIGINT},
      </if>
      <if test="record.stockId != null">
        stock_id = #{record.stockId,jdbcType=BIGINT},
      </if>
      <if test="record.marketCode != null">
        market_code = #{record.marketCode,jdbcType=VARCHAR},
      </if>
      <if test="record.marketName != null">
        market_name = #{record.marketName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockCode != null">
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.stockName != null">
        stock_name = #{record.stockName,jdbcType=VARCHAR},
      </if>
      <if test="record.currentStockHolding != null">
        current_stock_holding = #{record.currentStockHolding,jdbcType=INTEGER},
      </if>
      <if test="record.positionDate != null">
        position_date = #{record.positionDate,jdbcType=BIGINT},
      </if>
      <if test="record.positionCost != null">
        position_cost = #{record.positionCost,jdbcType=DECIMAL},
      </if>
      <if test="record.costValue != null">
        cost_value = #{record.costValue,jdbcType=DECIMAL},
      </if>
      <if test="record.singleCostValue != null">
        single_cost_value = #{record.singleCostValue,jdbcType=DECIMAL},
      </if>
      <if test="record.profitLoss != null">
        profit_loss = #{record.profitLoss,jdbcType=VARCHAR},
      </if>
      <if test="record.marketValue != null">
        market_value = #{record.marketValue,jdbcType=DECIMAL},
      </if>
      <if test="record.stockholderAccount != null">
        stockholder_account = #{record.stockholderAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.frozenAmount != null">
        frozen_amount = #{record.frozenAmount,jdbcType=INTEGER},
      </if>
      <if test="record.remaining != null">
        remaining = #{record.remaining,jdbcType=DECIMAL},
      </if>
      <if test="record.transitShares != null">
        transit_shares = #{record.transitShares,jdbcType=INTEGER},
      </if>
      <if test="record.shareRemaining != null">
        share_remaining = #{record.shareRemaining,jdbcType=DECIMAL},
      </if>
      <if test="record.latestPrice != null">
        latest_price = #{record.latestPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.profitRate != null">
        profit_rate = #{record.profitRate,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.operatorId != null">
        operator_id = #{record.operatorId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ams_stock_holding
    set stock_holding_id = #{record.stockHoldingId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      broker_id = #{record.brokerId,jdbcType=BIGINT},
      stock_account_id = #{record.stockAccountId,jdbcType=BIGINT},
      market_id = #{record.marketId,jdbcType=BIGINT},
      stock_id = #{record.stockId,jdbcType=BIGINT},
      market_code = #{record.marketCode,jdbcType=VARCHAR},
      market_name = #{record.marketName,jdbcType=VARCHAR},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      stock_name = #{record.stockName,jdbcType=VARCHAR},
      current_stock_holding = #{record.currentStockHolding,jdbcType=INTEGER},
      position_date = #{record.positionDate,jdbcType=BIGINT},
      position_cost = #{record.positionCost,jdbcType=DECIMAL},
      cost_value = #{record.costValue,jdbcType=DECIMAL},
      single_cost_value = #{record.singleCostValue,jdbcType=DECIMAL},
      profit_loss = #{record.profitLoss,jdbcType=VARCHAR},
      market_value = #{record.marketValue,jdbcType=DECIMAL},
      stockholder_account = #{record.stockholderAccount,jdbcType=VARCHAR},
      frozen_amount = #{record.frozenAmount,jdbcType=INTEGER},
      remaining = #{record.remaining,jdbcType=DECIMAL},
      transit_shares = #{record.transitShares,jdbcType=INTEGER},
      share_remaining = #{record.shareRemaining,jdbcType=DECIMAL},
      latest_price = #{record.latestPrice,jdbcType=DECIMAL},
      profit_rate = #{record.profitRate,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      operator_id = #{record.operatorId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pbs.ams.web.model.AmsStockHolding">
    update ams_stock_holding
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="brokerId != null">
        broker_id = #{brokerId,jdbcType=BIGINT},
      </if>
      <if test="stockAccountId != null">
        stock_account_id = #{stockAccountId,jdbcType=BIGINT},
      </if>
      <if test="marketId != null">
        market_id = #{marketId,jdbcType=BIGINT},
      </if>
      <if test="stockId != null">
        stock_id = #{stockId,jdbcType=BIGINT},
      </if>
      <if test="marketCode != null">
        market_code = #{marketCode,jdbcType=VARCHAR},
      </if>
      <if test="marketName != null">
        market_name = #{marketName,jdbcType=VARCHAR},
      </if>
      <if test="stockCode != null">
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="stockName != null">
        stock_name = #{stockName,jdbcType=VARCHAR},
      </if>
      <if test="currentStockHolding != null">
        current_stock_holding = #{currentStockHolding,jdbcType=INTEGER},
      </if>
      <if test="positionDate != null">
        position_date = #{positionDate,jdbcType=BIGINT},
      </if>
      <if test="positionCost != null">
        position_cost = #{positionCost,jdbcType=DECIMAL},
      </if>
      <if test="costValue != null">
        cost_value = #{costValue,jdbcType=DECIMAL},
      </if>
      <if test="singleCostValue != null">
        single_cost_value = #{singleCostValue,jdbcType=DECIMAL},
      </if>
      <if test="profitLoss != null">
        profit_loss = #{profitLoss,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        market_value = #{marketValue,jdbcType=DECIMAL},
      </if>
      <if test="stockholderAccount != null">
        stockholder_account = #{stockholderAccount,jdbcType=VARCHAR},
      </if>
      <if test="frozenAmount != null">
        frozen_amount = #{frozenAmount,jdbcType=INTEGER},
      </if>
      <if test="remaining != null">
        remaining = #{remaining,jdbcType=DECIMAL},
      </if>
      <if test="transitShares != null">
        transit_shares = #{transitShares,jdbcType=INTEGER},
      </if>
      <if test="shareRemaining != null">
        share_remaining = #{shareRemaining,jdbcType=DECIMAL},
      </if>
      <if test="latestPrice != null">
        latest_price = #{latestPrice,jdbcType=DECIMAL},
      </if>
      <if test="profitRate != null">
        profit_rate = #{profitRate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
    </set>
    where stock_holding_id = #{stockHoldingId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pbs.ams.web.model.AmsStockHolding">
    update ams_stock_holding
    set company_id = #{companyId,jdbcType=BIGINT},
      broker_id = #{brokerId,jdbcType=BIGINT},
      stock_account_id = #{stockAccountId,jdbcType=BIGINT},
      market_id = #{marketId,jdbcType=BIGINT},
      stock_id = #{stockId,jdbcType=BIGINT},
      market_code = #{marketCode,jdbcType=VARCHAR},
      market_name = #{marketName,jdbcType=VARCHAR},
      stock_code = #{stockCode,jdbcType=VARCHAR},
      stock_name = #{stockName,jdbcType=VARCHAR},
      current_stock_holding = #{currentStockHolding,jdbcType=INTEGER},
      position_date = #{positionDate,jdbcType=BIGINT},
      position_cost = #{positionCost,jdbcType=DECIMAL},
      cost_value = #{costValue,jdbcType=DECIMAL},
      single_cost_value = #{singleCostValue,jdbcType=DECIMAL},
      profit_loss = #{profitLoss,jdbcType=VARCHAR},
      market_value = #{marketValue,jdbcType=DECIMAL},
      stockholder_account = #{stockholderAccount,jdbcType=VARCHAR},
      frozen_amount = #{frozenAmount,jdbcType=INTEGER},
      remaining = #{remaining,jdbcType=DECIMAL},
      transit_shares = #{transitShares,jdbcType=INTEGER},
      share_remaining = #{shareRemaining,jdbcType=DECIMAL},
      latest_price = #{latestPrice,jdbcType=DECIMAL},
      profit_rate = #{profitRate,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      operator_id = #{operatorId,jdbcType=BIGINT}
    where stock_holding_id = #{stockHoldingId,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>