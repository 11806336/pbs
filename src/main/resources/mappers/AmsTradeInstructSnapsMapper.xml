<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbs.ams.web.mappers.AmsTradeInstructSnapsMapper">
  <resultMap id="BaseResultMap" type="com.pbs.ams.web.model.AmsTradeInstructSnaps">
    <id column="snaps_time" jdbcType="BIGINT" property="snapsTime" />
    <result column="instruct_id" jdbcType="BIGINT" property="instructId" />
    <result column="trade_platform_type" jdbcType="TINYINT" property="tradePlatformType" />
    <result column="trade_order_type" jdbcType="TINYINT" property="tradeOrderType" />
    <result column="instruct_user_id" jdbcType="BIGINT" property="instructUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="executed_qty" jdbcType="INTEGER" property="executedQty" />
    <result column="instruct_status" jdbcType="TINYINT" property="instructStatus" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="ip_source" jdbcType="VARCHAR" property="ipSource" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
  </resultMap>
  <sql id="Base_Column_List">
    snaps_time, instruct_id, trade_platform_type, trade_order_type, instruct_user_id, 
    remark, executed_qty, instruct_status, start_time, end_time, ip_source, create_time, 
    update_time, operator_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_trade_instruct_snaps
    where snaps_time = #{snapsTime,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ams_trade_instruct_snaps
    where snaps_time = #{snapsTime,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pbs.ams.web.model.AmsTradeInstructSnaps">
    insert into ams_trade_instruct_snaps (snaps_time, instruct_id, trade_platform_type, 
      trade_order_type, instruct_user_id, remark, 
      executed_qty, instruct_status, start_time, 
      end_time, ip_source, create_time, 
      update_time, operator_id)
    values (#{snapsTime,jdbcType=BIGINT}, #{instructId,jdbcType=BIGINT}, #{tradePlatformType,jdbcType=TINYINT}, 
      #{tradeOrderType,jdbcType=TINYINT}, #{instructUserId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{executedQty,jdbcType=INTEGER}, #{instructStatus,jdbcType=TINYINT}, #{startTime,jdbcType=BIGINT}, 
      #{endTime,jdbcType=BIGINT}, #{ipSource,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT}, #{operatorId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pbs.ams.web.model.AmsTradeInstructSnaps">
    insert into ams_trade_instruct_snaps
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="snapsTime != null">
        snaps_time,
      </if>
      <if test="instructId != null">
        instruct_id,
      </if>
      <if test="tradePlatformType != null">
        trade_platform_type,
      </if>
      <if test="tradeOrderType != null">
        trade_order_type,
      </if>
      <if test="instructUserId != null">
        instruct_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="executedQty != null">
        executed_qty,
      </if>
      <if test="instructStatus != null">
        instruct_status,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="ipSource != null">
        ip_source,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="snapsTime != null">
        #{snapsTime,jdbcType=BIGINT},
      </if>
      <if test="instructId != null">
        #{instructId,jdbcType=BIGINT},
      </if>
      <if test="tradePlatformType != null">
        #{tradePlatformType,jdbcType=TINYINT},
      </if>
      <if test="tradeOrderType != null">
        #{tradeOrderType,jdbcType=TINYINT},
      </if>
      <if test="instructUserId != null">
        #{instructUserId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="executedQty != null">
        #{executedQty,jdbcType=INTEGER},
      </if>
      <if test="instructStatus != null">
        #{instructStatus,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="ipSource != null">
        #{ipSource,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pbs.ams.web.model.AmsTradeInstructSnaps">
    update ams_trade_instruct_snaps
    <set>
      <if test="instructId != null">
        instruct_id = #{instructId,jdbcType=BIGINT},
      </if>
      <if test="tradePlatformType != null">
        trade_platform_type = #{tradePlatformType,jdbcType=TINYINT},
      </if>
      <if test="tradeOrderType != null">
        trade_order_type = #{tradeOrderType,jdbcType=TINYINT},
      </if>
      <if test="instructUserId != null">
        instruct_user_id = #{instructUserId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="executedQty != null">
        executed_qty = #{executedQty,jdbcType=INTEGER},
      </if>
      <if test="instructStatus != null">
        instruct_status = #{instructStatus,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="ipSource != null">
        ip_source = #{ipSource,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
    </set>
    where snaps_time = #{snapsTime,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pbs.ams.web.model.AmsTradeInstructSnaps">
    update ams_trade_instruct_snaps
    set instruct_id = #{instructId,jdbcType=BIGINT},
      trade_platform_type = #{tradePlatformType,jdbcType=TINYINT},
      trade_order_type = #{tradeOrderType,jdbcType=TINYINT},
      instruct_user_id = #{instructUserId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      executed_qty = #{executedQty,jdbcType=INTEGER},
      instruct_status = #{instructStatus,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      ip_source = #{ipSource,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      operator_id = #{operatorId,jdbcType=BIGINT}
    where snaps_time = #{snapsTime,jdbcType=BIGINT}
  </update>
  <insert id="insertIntoAmsTradeInstructSnapsSnaps">
    insert into ams_trade_instruct_snaps_snaps SELECT CAST(DATE_FORMAT(CURRENT_TIMESTAMP(3),'%Y%m%d%H%i%S%f')/1000 AS UNSIGNED),tb.* from ams_trade_instruct_snaps as tb where snaps_time= #{snaps_time}
  </insert>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>