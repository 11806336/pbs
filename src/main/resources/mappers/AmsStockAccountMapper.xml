<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbs.ams.web.mappers.AmsStockAccountMapper">
  <resultMap id="BaseResultMap" type="com.pbs.ams.web.model.AmsStockAccount">
    <id column="stock_account_id" jdbcType="BIGINT" property="stockAccountId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="stock_account_type" jdbcType="INTEGER" property="stockAccountType" />
    <result column="stock_account" jdbcType="BIGINT" property="stockAccount" />
    <result column="stock_account_name" jdbcType="VARCHAR" property="stockAccountName" />
    <result column="stock_account_password" jdbcType="VARCHAR" property="stockAccountPassword" />
    <result column="broker_id" jdbcType="BIGINT" property="brokerId" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="stock_account_status" jdbcType="VARCHAR" property="stockAccountStatus" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="operator_id" jdbcType="BIGINT" property="operatorId" />
  </resultMap>
  <sql id="Base_Column_List">
    stock_account_id, company_id, stock_account_type, stock_account, stock_account_name, 
    stock_account_password, broker_id, product_id, stock_account_status, create_time, 
    update_time, operator_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_stock_account
    where stock_account_id = #{stockAccountId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ams_stock_account
    where stock_account_id = #{stockAccountId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pbs.ams.web.model.AmsStockAccount">
    insert into ams_stock_account (stock_account_id, company_id, stock_account_type, 
      stock_account, stock_account_name, stock_account_password, 
      broker_id, product_id, stock_account_status, 
      create_time, update_time, operator_id
      )
    values (#{stockAccountId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{stockAccountType,jdbcType=INTEGER}, 
      #{stockAccount,jdbcType=BIGINT}, #{stockAccountName,jdbcType=VARCHAR}, #{stockAccountPassword,jdbcType=VARCHAR}, 
      #{brokerId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{stockAccountStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{operatorId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pbs.ams.web.model.AmsStockAccount">
    insert into ams_stock_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockAccountId != null">
        stock_account_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="stockAccountType != null">
        stock_account_type,
      </if>
      <if test="stockAccount != null">
        stock_account,
      </if>
      <if test="stockAccountName != null">
        stock_account_name,
      </if>
      <if test="stockAccountPassword != null">
        stock_account_password,
      </if>
      <if test="brokerId != null">
        broker_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="stockAccountStatus != null">
        stock_account_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockAccountId != null">
        #{stockAccountId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="stockAccountType != null">
        #{stockAccountType,jdbcType=INTEGER},
      </if>
      <if test="stockAccount != null">
        #{stockAccount,jdbcType=BIGINT},
      </if>
      <if test="stockAccountName != null">
        #{stockAccountName,jdbcType=VARCHAR},
      </if>
      <if test="stockAccountPassword != null">
        #{stockAccountPassword,jdbcType=VARCHAR},
      </if>
      <if test="brokerId != null">
        #{brokerId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="stockAccountStatus != null">
        #{stockAccountStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pbs.ams.web.model.AmsStockAccount">
    update ams_stock_account
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="stockAccountType != null">
        stock_account_type = #{stockAccountType,jdbcType=INTEGER},
      </if>
      <if test="stockAccount != null">
        stock_account = #{stockAccount,jdbcType=BIGINT},
      </if>
      <if test="stockAccountName != null">
        stock_account_name = #{stockAccountName,jdbcType=VARCHAR},
      </if>
      <if test="stockAccountPassword != null">
        stock_account_password = #{stockAccountPassword,jdbcType=VARCHAR},
      </if>
      <if test="brokerId != null">
        broker_id = #{brokerId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="stockAccountStatus != null">
        stock_account_status = #{stockAccountStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
    </set>
    where stock_account_id = #{stockAccountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pbs.ams.web.model.AmsStockAccount">
    update ams_stock_account
    set company_id = #{companyId,jdbcType=BIGINT},
      stock_account_type = #{stockAccountType,jdbcType=INTEGER},
      stock_account = #{stockAccount,jdbcType=BIGINT},
      stock_account_name = #{stockAccountName,jdbcType=VARCHAR},
      stock_account_password = #{stockAccountPassword,jdbcType=VARCHAR},
      broker_id = #{brokerId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      stock_account_status = #{stockAccountStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      operator_id = #{operatorId,jdbcType=BIGINT}
    where stock_account_id = #{stockAccountId,jdbcType=BIGINT}
  </update>
  <insert id="insertIntoAmsStockAccountSnaps">
    insert into ams_stock_account_snaps SELECT CAST(DATE_FORMAT(CURRENT_TIMESTAMP(3),'%Y%m%d%H%i%S%f')/1000 AS UNSIGNED),tb.* from ams_stock_account as tb where stock_account_id= #{stock_account_id}
  </insert>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>